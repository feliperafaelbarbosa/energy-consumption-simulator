import pathlib
from wfcommons.wfchef.recipes import BlastRecipe
from wfcommons import WorkflowGenerator
num_tasks = [100, 250, 370, 800]
for task in num_tasks:
    generator = WorkflowGenerator(BlastRecipe.from_num_tasks(task))
    workflows = generator.build_workflows(10)
    for i, workflow in enumerate(workflows):
import pathlib
from wfcommons.wfchef.recipes import BlastRecipe
from wfcommons import WorkflowGenerator
num_tasks = [100, 250, 370, 800]
for task in num_tasks:
    generator = WorkflowGenerator(BlastRecipe.from_num_tasks(task))
    workflows = generator.build_workflows(10)
    for i, workflow in enumerate(workflows):
for task in num_tasks:
    generator = WorkflowGenerator(BlastRecipe.from_num_tasks(task))
    workflows = generator.build_workflows(10)
	    for i, workflow in enumerate(workflows):
        workflow.write_json(pathlib.Path(f'blast-workflow-{task}-{i}.json'))
for task in num_tasks:
    generator = WorkflowGenerator(BlastRecipe.from_num_tasks(task))
    workflows = generator.build_workflows(10)
	for i, workflow in enumerate(workflows):
import pathlib
from wfcommons.wfchef.recipes import SeismologyRecipe
from wfcommons import WorkflowGenerator
generator = WorkflowGenerator(SeismologyRecipe.from_num_tasks(250))
workflow = generator.build_workflow()
workflow.write_json(pathlib.Path('seismology-workflow.json'))
